#
# EDK BSP generator for third party operating systems
# supporting Microblaze (and PPC ???)
#
# (C) Copyright 2010-2011
# Li-Pro.Net <www.li-pro.net>
# Stephan Linz <linz@li-pro.net>
#
# (C) Copyright 2008 Michal Simek <monstr@monstr.eu>
# Borrowed in parts from uboot_v2_1_0 and device-tree_v2_1_0
# Project description at http://www.monstr.eu/uboot/ and
# http://www.monstr.eu/wiki/doku.php?id=bsp:bsp
#
# Template from:
# http://www.itee.uq.edu.au/~listarch/microblaze-uclinux/archive/2007/11/msg00008.html
# http://www.itee.uq.edu.au/~listarch/microblaze-uclinux/archive/2007/11/msg00025.html
#   http://www.itee.uq.edu.au/~listarch/microblaze-uclinux/archive/2007/11/binl27ir65dZo.bin
#   http://www.itee.uq.edu.au/~listarch/microblaze-uclinux/archive/2007/11/binl2SnmcqdN6.bin
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
#

OPTION psf_version = 2.1;

BEGIN OS tpos

  OPTION DRC = tpos_drc;
  OPTION SUPPORTED_PERIPHERALS = (microblaze ppc405 ppc405_virtex4 ppc440_virtex5);
  OPTION OS_STATE = active;

  OPTION DESC = "Generate BSP files for ThirdParty OS (U-Boot, Linux, ...)";

  BEGIN CATEGORY generate
    PARAM NAME = generate, DESC = "TPOS: package enable", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    PARAM NAME = fsboot, DESC = "generate FS-Boot configuration files (default off, because of inadequate royalty)", TYPE = bool, DEFAULT = false;
    PARAM NAME = xlboot, DESC = "generate XL-Boot configuration files", TYPE = bool, DEFAULT = true;
    PARAM NAME = uboot, DESC = "generate U-Boot configuration files", TYPE = bool, DEFAULT = true;
    PARAM NAME = linux, DESC = "generate Linux 2.4/2.6 configuration files", TYPE = bool, DEFAULT = true;
    PARAM NAME = devtree, DESC = "generate Linux 2.6 Device-Tree specification file", TYPE = bool, DEFAULT = true;
  END CATEGORY

  BEGIN CATEGORY syscore
    PARAM NAME = syscore, DESC = "TPOS: systems core components", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    # communication peripherals (UART) on OPB or PLB
    PARAM NAME = stdin, DESC = "stdin peripheral", TYPE = peripheral_instance, REQUIRES_INTERFACE = stdin, RANGE = (opb_mdm, opb_uartlite, xps_uartlite, axi_uartlite, opb_uart16550, plb_uart16550, xps_uart16550, axi_uart16550), DEFAULT = none;
    PARAM NAME = stdout, DESC = "stdout peripheral", TYPE = peripheral_instance, REQUIRES_INTERFACE = stdout, RANGE = (opb_mdm, opb_uartlite, xps_uartlite, opb_uart16550, plb_uart16550, xps_uart16550), DEFAULT = none;
    # core peripherals
    PARAM NAME = intc, DESC = "system interrupt controller", TYPE = peripheral_instance, RANGE = (opb_intc, plb_intc, xps_intc, axi_intc), DEFAULT = none;
    PARAM NAME = timer, DESC = "system timer", TYPE = peripheral_instance, RANGE = (opb_timer, plb_timer, xps_timer, axi_timer), DEFAULT = none;
  END CATEGORY

  BEGIN CATEGORY sysmem
    PARAM NAME = sysmem, DESC = "TPOS: systems memory components", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    # local peripherals (BRAM), Xilinx BRAM Interface on LMB
    PARAM NAME = lmb_memory, DESC = "local memory (mainly BRAM)", TYPE = peripheral_instance, RANGE = (lmb_bram_if_cntlr, opb_bram_if_cntlr, axi_bram_ctrl), DEFAULT = none;
    # memory peripherals (RAM), Xilinx (Multi-Port/Multi-Channel) (External) Memory Controller on OPB or PLB
    PARAM NAME = main_memory, DESC = "main memory (mainly SDRAM/SRAM)", TYPE = peripheral_instance, RANGE = (ppc440mc_ddr2, opb_sdram, opb_ddr, opb_emc, plb_sdram, plb_ddr, plb_ddr2, plb_emc, mch_opb_sdram, mch_opb_ddr, mch_opb_ddr2, mch_opb_emc, mpmc, xps_mch_emc, axi_s6_ddrx, axi_v6_ddrx), DEFAULT = none;
    PARAM NAME = main_memory_bank, DESC = "bank within memory controller of main memory", TYPE = int, DEFAULT = 0;
    PARAM NAME = main_memory_start, DESC = "manual override of main memory start address", TYPE = int, DEFAULT = -1;
    PARAM NAME = main_memory_size, DESC = "manual override of main memory size", TYPE = int, DEFAULT = 0;
    PARAM NAME = main_memory_offset, DESC = "manual override of main memory start offset", TYPE = int, DEFAULT = 0;
    # flash peripherals (ROM), Xilinx (Multi-Channel) External Memory Controller on OPB or PLB
    PARAM NAME = flash_memory, DESC = "flash memory (mainly NOR)", TYPE = peripheral_instance, RANGE = (opb_emc, plb_emc, mch_opb_emc, xps_mch_emc, axi_emc), DEFAULT = none;
    PARAM NAME = flash_memory_bank, DESC = "bank within memory controller of flash memory", TYPE = int, DEFAULT = 0;
    PARAM NAME = flash_memory_start, DESC = "manual override of flash memory start address", TYPE = int, DEFAULT = -1;
    PARAM NAME = flash_memory_size, DESC = "manual override of flash memory size", TYPE = int, DEFAULT = 0;
    PARAM NAME = flash_memory_offset, DESC = "manual override of flash memory start offset", TYPE = int, DEFAULT = 0;
  END CATEGORY

  BEGIN CATEGORY sysio
    PARAM NAME = sysio, DESC = "TPOS: systems i/o components", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    # standard peripherals
    PARAM NAME = sysace, DESC = "sysace interface for CF", TYPE = peripheral_instance, RANGE = (opb_sysace, xps_sysace, axi_sysace), DEFAULT = none;
    PARAM NAME = ethernet, DESC = "ethernet controller", TYPE = peripheral_instance, RANGE = (opb_ethernet, opb_ethernetlite, xps_ethernetlite, axi_ethernetlite, xps_ethernet, xps_ll_temac), DEFAULT = none;
    PARAM NAME = gpio, DESC = "LED interface controller", TYPE = peripheral_instance, RANGE = (opb_gpio, plb_gpio, xps_gpio, axi_gpio), DEFAULT = none;
    PARAM NAME = iic, DESC = "I2C interface controller", TYPE = peripheral_instance, RANGE = (opb_iic, xps_iic, axi_iic), DEFAULT = none;
    PARAM NAME = spi, DESC = "SPI interface controller", TYPE = peripheral_instance, RANGE = (xps_spi, axi_spi), DEFAULT = none;
  END CATEGORY

  BEGIN CATEGORY customio
    PARAM NAME = customio, DESC = "TPOS: users i/o components (customized)", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    # customized peripherals
    BEGIN ARRAY generic_uio_list
      PROPERTY DESC = "List of peripheral interfaces for generic uio access";
      PARAM NAME = generic_uio, DESC = "Peripheral interface for generic uio access", TYPE = peripheral_instance, DEFAULT = none;
    END ARRAY
    PARAM NAME = s2imac, DESC = "GigE Vision ethernet controller", TYPE = peripheral_instance, RANGE = (xps_epc), DEFAULT = none;
  END CATEGORY

  BEGIN CATEGORY bootloader
    PARAM NAME = bootloader, DESC = "TPOS: bootloader specifics", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    PARAM NAME = xlboot_boot_counter, DESC = "XL-Boot autoboot counter value (zero means of)", TYPE = int, DEFAULT = 10;
    PARAM NAME = xlboot_locblob_offset, DESC = "XL-Boot image locator blob position offset in flash memory", TYPE = int, DEFAULT = 0;
    PARAM NAME = uboot_version, DESC = "U-Boot version you want to support", TYPE = enum, VALUES = ("v2010.12" = UB_2010_12, "older than v2010.12" = UB_2010_12_PRE), DEFAULT = UB_2010_12;
    PARAM NAME = uboot_position, DESC = "U-Boot position in memory", TYPE = int, DEFAULT = 0;
  END CATEGORY

  BEGIN CATEGORY linux
    PARAM NAME = linux, DESC = "TPOS: Linux specifics", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    PARAM NAME = linux_bootargs, DESC = "Booting arguments", TYPE = string, default = "";
    PARAM NAME = periph_type_overrides, DESC = "list of peripheral type overrides", TYPE = string, DEFAULT = "";
  END CATEGORY

  BEGIN CATEGORY ecos
    PARAM NAME = ecos, DESC = "TPOS: eCos specifics", TYPE = bool, DEFAULT = true, PERMIT = none, GUI_PERMIT = none;
    PARAM NAME = board_name, DESC = "name of the board", TYPE = string, default = "";
  END CATEGORY

  BEGIN CATEGORY microblaze_exceptions
    PARAM NAME = microblaze_exceptions, TYPE = bool, DEFAULT = false, DESC = "Setting ignored", PERMIT = none, GUI_PERMIT = none, DEP = (special = microblaze);
    BEGIN ARRAY microblaze_exception_vectors
      PROPERTY DESC = "Unused. Exception handling managed by ThirdParty OS completely.";
      PROPERTY SIZE = 8; # Reset, User Vector (Exception), Interrupt, Break: Non-maskable hardware, Break: Hardware, Break: Software, Hardware Exception, Reserved by Xilinx for future use
      PROPERTY DEFAULT = ((XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0), (XEXC_NONE, XNullHandler, 0));
      PARAM NAME = exception, TYPE = enum, VALUES = ("Unused" = XEXC_NONE), DESC = "Unused", PERMIT = none, GUI_PERMIT = none;
      PARAM NAME = handler, TYPE = string, DESC = "Unused";
      PARAM NAME = callback, DESC = "Unused";
    END ARRAY
  END CATEGORY

END OS
